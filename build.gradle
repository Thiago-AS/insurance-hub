buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.github.ben-manes:gradle-versions-plugin:${versionsPluginVersion}"
    }
}

plugins {
    id 'java'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    apply from: "${rootProject.rootDir}/config/pmd.gradle"
    apply from: "${rootProject.rootDir}/config/checkstyle.gradle"
    apply from: "${rootProject.rootDir}/config/jacoco.gradle"
    apply from: "${rootProject.rootDir}/config/tests.gradle"

    group = 'br.com.origin'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"
        testImplementation "org.mockito:mockito-core:${mockitoVersion}"
        testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
        testImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    }
}

task codeChecks(type: GradleBuild) {
    tasks = ['checkstyleMain', 'pmdMain', 'checkstyleTest', 'pmdTest']
}

wrapper {
    gradleVersion = "${gradleWrapperVersion}"
    distributionType = Wrapper.DistributionType.ALL
}

dependencies {
    implementation project(':core')
    implementation project(':api')
}
